name: Run CI Tests
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-20.04
    strategy:
      max-parallel: 4
      matrix:
        python-version: [ 3.9.0 ]
    
    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Runs tests
      run: |
        docker-compose run test
    
    - name: Runs coverage
      run: |
        docker-compose run -e DATABASE_NAME="postgres" -e DATABASE_USER="postgres" -e DATABASE_PASSWORD="postgres" -e DATABASE_HOST="127.0.0.1" -e DATABASE_PORT=${{ matrix.db_port }} -e ALPHA_VANTAGE_API_KEY=demo -e DJANGO_SECRET_KEY=test-secret-key -e DJANGO_DEBUG="1" -e CELERY_BACKEND_DATABASE_NAME="celery-backend" -e RABBIT_MQ_URL="amqp://guest:guest@rabbitmq:5672" -e SENTRY_DSN="" test-coverage

    - name: Run Lint
      run: |
        docker-compose run -e DATABASE_NAME="postgres" -e DATABASE_USER="postgres" -e DATABASE_PASSWORD="postgres" -e DATABASE_HOST="127.0.0.1" -e DATABASE_PORT=${{ matrix.db_port }} -e ALPHA_VANTAGE_API_KEY=demo -e DJANGO_SECRET_KEY=test-secret-key -e DJANGO_DEBUG="1" -e CELERY_BACKEND_DATABASE_NAME="celery-backend" -e RABBIT_MQ_URL="amqp://guest:guest@rabbitmq:5672" -e SENTRY_DSN="" test-lint